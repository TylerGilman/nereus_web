// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.680
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

func Footer() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"\"><div x-data=\"{\n        text: &#39;&#39;,\n        textArray : [&#39;In Greek Mythology Nereus was a Sea God&#39;, &#39;Called by Homer Old Man of the Sea&#39;, &#39;Known for wisdom, gift of prophecy, and ability to shapeshift&#39; ], textIndex: 0, charIndex: 0, typeSpeed: 110,\n  cursorSpeed: 550, pauseEnd: 1500, pauseStart: 20, direction: &#39;forward&#39; , }\" x-init=\"$nextTick(() =&gt; {\n        let typingInterval = setInterval(startTyping, $data.typeSpeed);\n    \n        function startTyping(){\n            let current = $data.textArray[ $data.textIndex ];\n            \n            // check to see if we hit the end of the string\n            if($data.charIndex &gt; current.length){\n                    $data.direction = &#39;backward&#39;;\n                    clearInterval(typingInterval);\n                    \n                    setTimeout(function(){\n                        typingInterval = setInterval(startTyping, $data.typeSpeed);\n                    }, $data.pauseEnd);\n            }   \n                \n            $data.text = current.substring(0, $data.charIndex);\n            \n            if($data.direction == &#39;forward&#39;)\n            {\n                $data.charIndex += 1;\n            } \n            else \n            {\n                if($data.charIndex == 0)\n                {\n                    $data.direction = &#39;forward&#39;;\n                    clearInterval(typingInterval);\n                    setTimeout(function(){\n                        $data.textIndex += 1;\n                        if($data.textIndex &gt;= $data.textArray.length)\n                        {\n                            $data.textIndex = 0;\n                        }\n                        typingInterval = setInterval(startTyping, $data.typeSpeed);\n                    }, $data.pauseStart);\n                }\n                $data.charIndex -= 1;\n            }\n        }\n                    \n        setInterval(function(){\n            if($refs.cursor.classList.contains(&#39;hidden&#39;))\n            {\n                $refs.cursor.classList.remove(&#39;hidden&#39;);\n            } \n            else \n            {\n                $refs.cursor.classList.add(&#39;hidden&#39;);\n            }\n        }, $data.cursorSpeed);\n\n    })\" class=\"flex items-center justify-center mx-auto text-center max-w-7xl\"><div class=\"relative flex items-center justify-center h-auto\"><p class=\"text-2xl text-slate-700 font-slate-700 leading-tight\" x-text=\"text\"></p><span class=\"absolute right-0 w-2 -mr-2 bg-slate-700 h-3/4\" x-ref=\"cursor\"></span></div></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
